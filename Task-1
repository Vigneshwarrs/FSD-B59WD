1) Difference between HTTP1.1 vs HTTP2

Http/1
i) It works on the textual formats
ii) There is head of line blocking all the request behind it until it doesn't get its all resources.
iii) It uses requests Inlining for use getting multiple pages.
iv) It compresses data by itself.
Http/2
i) It works on the binary protocol.
ii) It allows multiplexing so one TCP connection is required for multiple requests.
iii) It uses PUSH frames by server that collects all the multiple pages.
iv) It uses HPACK for data compression.


2) Objects and its internal representation in Javascript


In JavaScript, an object is a standalone entity, with properties and type. Compare it with a cup, for example. A cup is an object, with properties. A cup has a color, a design, weight, a material it is made of, etc. The same way, JavaScript objects can have properties, which define their characteristics.
Creating Objects in JavaScript:

    I) By object literal
    II) By creating instance of Object directly (using new keyword)

By object literal:

The syntax of creating object using object literal is given below:

Object={property:value};

Property and value is separated by colon(:).

Example:
var person = {
	fname:"X",
	lname:"x",
	age:20
	};




By creating instance of Object directly (using new keyword):
The syntax of creating object directly is given below:
var person = new Object();
Here, new keyword is used to create object.
Example:
var person = new Object();
person.name="xx";
person.location="yyy";
Accessing JavaScript Objects:
The syntax for accessing the property of an object is:
objectName.property
or
objectName[“property”]

Accessing ‘fname’ from example 1 using dot operator,
person.name
Accessing ‘name’ form example 2 using [],
person["name"].

